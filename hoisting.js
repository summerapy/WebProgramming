// 호이스팅 : 변수 끌어 올림 – 변수들을 범위의 최상단으로 끌어올리는 것 

/*
TODO: var
같은 이름을 가진 변수를 여러 개 선언 가능 → 중복 선언
Global context에 포함됨
전역 변수, 지역 변수의 차이가 불확실
*/

/*
TODO: let
ES6에서 도입
블럭 유효 범위를 가짐 – Script 또는 함수(블럭)의 context에 포함됨
중복 선언 안됨
hosting이 안됨 
*/

/*
TODO: const
ES6에서 도입
블럭 유효 범위를 가짐
변하지 않는 값을 선언할 때
반드시 초기화 해야 함
*/

/*
FIXME: 정리내용
Global Scope (전역 스코프)
var: 전역 스코프에서 선언 가능.
let, const: 전역 스코프에서 선언되지 않음. (스크립트 스코프를 가짐)

Script Scope
var: 스크립트 스코프를 가지지 않음.
let, const: ES6 이후, 스크립트 스코프를 지원. (전역에서 let과 const로 선언한 변수는 스크립트에 국한됨)

Function Local Scope (함수 스코프)
var, let, const: 모두 함수 내에서 로컬 스코프를 가짐.

Block Scope (블록 스코프)
var: 블록 스코프를 지원하지 않음. (블록 외부에서도 접근 가능)
let, const: 블록 스코프를 지원. 블록 {} 내부에서만 유효.
-------------------------------------------------------------------------------------------
var: 같은 스코프 내에서 재선언 가능.
let, const: 같은 스코프 내에서 재선언 불가능. (오류 발생)
-------------------------------------------------------------------------------------------
var: 재할당 가능.
let: 재할당 가능.
const: 재할당 불가능. (상수로 선언됨)
-------------------------------------------------------------------------------------------
*/